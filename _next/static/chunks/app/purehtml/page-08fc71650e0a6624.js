(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[533],{38705:function(e,n,r){Promise.resolve().then(r.bind(r,75595))},29036:function(e,n,r){"use strict";r.d(n,{AppLayout:function(){return p}});var t=r(5862),s=r(80850),i=r(51109),o=r(90824),l=r(88347),a=r(79645),c=r(7516),d=r(52337),h=r(94231);function m(e){let{children:n,href:r,...s}=e;return(0,t.jsx)(d.Anchor,{component:h.default,href:r,...s,children:n})}var x=r(25766);function u(e){let{href:n,...r}=e;return(0,t.jsx)(x.NavLink,{component:h.default,...r,href:n})}function p(e){let{children:n}=e,[r,{toggle:d}]=(0,a.useDisclosure)(),h=(0,c.usePathname)().endsWith("playground");return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)(s.AppShell,{header:{height:60},navbar:{width:300,breakpoint:"sm",collapsed:{mobile:!r,desktop:h||!1}},padding:"md",children:[(0,t.jsx)(s.AppShell.Header,{children:(0,t.jsxs)(i.Group,{h:"100%",px:{sm:"sm",md:"md"},gap:"sm",children:[(0,t.jsx)(o.Burger,{opened:r,onClick:d,hiddenFrom:"sm",size:"sm"}),(0,t.jsx)(m,{href:"/",size:"sm",children:(0,t.jsxs)(t.Fragment,{children:["PureHTML ",(0,t.jsx)(l.Code,{children:"Documentation"})]})}),(0,t.jsx)(m,{href:"/playground",pos:{sm:"relative",md:"absolute"},right:{sm:"",md:"1em"},size:"sm",children:"Playground"})]})}),(0,t.jsxs)(s.AppShell.Navbar,{p:"md",children:[(0,t.jsx)(u,{label:"Introduction",href:"/#intro"}),(0,t.jsx)(u,{label:"Getting Started",href:"/#getting-started"}),(0,t.jsx)(u,{label:"Basics",href:"/#basics"}),(0,t.jsx)(u,{label:"Constant Config",href:"/#constant-config"}),(0,t.jsx)(u,{label:"Arrays",href:"/#arrays"}),(0,t.jsx)(u,{label:"Objects",href:"/#objects"}),(0,t.jsx)(u,{label:"Transformers",href:"/#transformers"}),(0,t.jsx)(u,{label:"Union Config",href:"/#union-config"})]}),(0,t.jsx)(s.AppShell.Main,{children:n})]})})}},75595:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return R}});var t=r(5862),s=r(88434),i=r(58548),o=r(49474),l=r(42852),a=r(88347),c=r(81762),d=r(64001),h=r(6832),m=r(82842);function x(e){let{inputHtml:n,configYaml:r}=e,{result:s}=(0,m.v)({inputHtml:n,configYaml:r});return(0,t.jsx)(h.Q,{code:[{fileName:"input.html",code:n,language:"html"},{fileName:"config.yaml",code:r,language:"yaml"},{fileName:"output.json",code:s,language:"json"}],mt:"md"})}function u(){return(0,t.jsxs)(i.Box,{id:"arrays",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Arrays"}),(0,t.jsxs)(l.Text,{children:["Extracting an array can be done by setting"," ",(0,t.jsxs)(a.Code,{children:["{"," type: array, items: ","<configuration>"," ","}"]})," ","in our config."]}),(0,t.jsx)(x,{inputHtml:"<div>\n  <span>a</span>\n  <span>b</span>\n  <span>c</span>\n</div>",configYaml:"selector: span\ntype: array\nitems: {}\n"}),(0,t.jsx)(o.Title,{mt:"md",order:5,children:"Appying transformers to the items:"}),(0,t.jsxs)(l.Text,{children:["Let's say, we want to extract attributes of the matched items. We can use ",(0,t.jsx)(a.Code,{children:"attr(...name: string[])"})," transformer."]}),(0,t.jsx)(x,{inputHtml:'<div>\n  <a href="https://example.com/foo">a</a>\n  <a href="https://example.com/bar">b</a>\n  <a href="https://example.com/baz">c</a>\n</div>',configYaml:"selector: a\ntype: array\nitems:\n  transform: attr(href)\n"}),(0,t.jsxs)(c.Alert,{icon:(0,t.jsx)(d.Z,{}),mt:"sm",children:["It's possible to omit ",(0,t.jsx)(a.Code,{children:"type: array"})," part if provide"," ",(0,t.jsx)(a.Code,{children:"items"})]})]})}var p=r(52337),j=r(39478);function f(e){let{code:n}=e;return(0,t.jsx)(j.P,{code:n,lang:"html"})}function g(e){let{code:n}=e;return(0,t.jsx)(j.P,{code:n,lang:"json"})}function v(e){let{code:n}=e;return(0,t.jsx)(j.P,{code:n,lang:"yaml"})}let b='\n<div>\n  <span class="foo">Hello, PureHTML!</span>\n</div>',A="selector: .foo";function y(){let{result:e}=(0,m.v)({inputHtml:b,configYaml:A});return(0,t.jsxs)(i.Box,{id:"basics",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Basics"}),(0,t.jsx)(l.Text,{children:"Let's consider the this HTML:"}),(0,t.jsx)(f,{code:b}),(0,t.jsxs)(l.Text,{children:["Let's select the contents of ",(0,t.jsx)(a.Code,{children:".foo"})," selector. Here is our configuration:"]}),(0,t.jsx)(v,{code:A}),(0,t.jsx)(l.Text,{children:"The parser output will be exactly:"}),(0,t.jsx)(g,{code:e}),(0,t.jsx)(o.Title,{mt:"md",order:5,children:"Extracting numbers"}),(0,t.jsx)(l.Text,{children:"That was easy! What if we want to extract a number?"}),(0,t.jsx)(x,{inputHtml:'\n<div>\n  <p id="price">12.99</p>\n</div>',configYaml:"selector: '#price' # do not forget the quotes!"}),(0,t.jsxs)(o.Title,{mt:"md",order:5,children:["Type Casts (",(0,t.jsx)(a.Code,{children:"number"})," transformer)"]}),(0,t.jsxs)(l.Text,{children:["As you might have noticed, our output is a ",(0,t.jsx)(a.Code,{children:"string"}),". We would want a ",(0,t.jsx)(a.Code,{children:"number"})," instead. We will adjust our configuration to type-cast our output to a ",(0,t.jsx)(a.Code,{children:"number"}),". We will just add"," ",(0,t.jsx)(a.Code,{children:"transform: number"})," line to our configuration."]}),(0,t.jsx)(x,{inputHtml:'\n<div>\n  <p id="price">12.99</p>\n</div>',configYaml:"selector: '#price'\ntransform: number # use the number transformer"}),(0,t.jsxs)(o.Title,{mt:"md",order:5,children:["Trimming Text (",(0,t.jsx)(a.Code,{children:"trim"})," transformer)"]}),(0,t.jsx)(l.Text,{children:"Usually, the HTML is not formatted in the way we expect. The selectors would usually give us values with lots of spaces."}),(0,t.jsx)(x,{inputHtml:'\n<div>\n  <p id="product-title">\n  \n    Awesome Product\n  \n  </p>\n</div>',configYaml:"selector: '#product-title'"}),(0,t.jsxs)(l.Text,{children:["The spaces & new lines around the product title are not useful for us. So we ",(0,t.jsx)(a.Code,{children:"trim"})," them:"]}),(0,t.jsx)(x,{inputHtml:'\n<div>\n  <p id="product-title">\n  \n    Awesome Product\n  \n  </p>\n</div>',configYaml:"selector: '#product-title'\ntransform: trim"}),(0,t.jsx)(o.Title,{mt:"md",order:5,children:"Combining Transformers"}),(0,t.jsxs)(l.Text,{children:["What if we want to apply several transformers to our output? If we want to ",(0,t.jsx)(a.Code,{children:"trim"})," and cast to ",(0,t.jsx)(a.Code,{children:"number"}),", we just add"," ",(0,t.jsx)(a.Code,{children:"transform: [trim, number]"})," to our configuration. Then the selector's output will be first trimmed, then casted to number."]}),(0,t.jsx)(x,{inputHtml:'\n<div>\n  <span id="product-price">\n  \n    12.99\n  \n  </span>\n</div>',configYaml:"selector: 'span#product-price'\ntransform: [trim, number]"}),(0,t.jsxs)(l.Text,{mt:"md",children:["We will explore the other transformers in"," ",(0,t.jsx)(p.Anchor,{href:"#transformers",children:"Transormers"})," section."]})]})}var C=r(85492),T=r(6879);function w(){return(0,t.jsxs)(i.Box,{id:"constant-config",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Constant config"}),(0,t.jsxs)(l.Text,{children:["This configuration accepts only ",(0,t.jsx)(a.Code,{children:"constant"})," property and returns its value. This transformer is really useful as the in the"," ",(0,t.jsx)(p.Anchor,{href:"#union-config",children:"union config"})," as"," ",(0,t.jsx)(a.Code,{children:"default"})," case, similar to switch/case statement JavaScript and other languages."]}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>Sample content</div>",configYaml:"{ constant: constant value }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"complex",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Complex object"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>Sample content</div>",configYaml:"{ constant: { complex: { values: ['are', 'possible'] } } }"})})]})]})]})}var H=r(28534),P=r(28913),Y=r(13854);function I(){return(0,t.jsxs)(i.Box,{id:"getting-started",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Getting Started"}),(0,t.jsxs)(l.Text,{children:["Install the"," ",(0,t.jsx)(p.Anchor,{href:"https://npmjs.com/package/@purescraps/purehtml",rel:"nofollow",target:"_blank",children:"@purescraps/purehtml"})," ","with the package manager of your choice:"]}),(0,t.jsx)(h.Q,{code:[{code:"npm i -S @purescraps/purehtml",language:"bash",fileName:"npm",icon:(0,t.jsx)(H.Z,{width:(0,T.h)(20)})},{code:"yarn add @purescraps/purehtml",language:"bash",fileName:"yarn",icon:(0,t.jsx)(P.Z,{width:(0,T.h)(20)})},{code:"pnpm add @purescraps/purehtml",language:"bash",fileName:"pnpm",icon:(0,t.jsx)(Y.Z,{width:(0,T.h)(20)})}],mt:"sm"}),(0,t.jsx)(l.Text,{mt:"xs",size:"xs",children:"Currently, the parsing backend is only implemented in TypeScript. Implementations in different languages is in our roadmap."}),(0,t.jsx)(l.Text,{mt:"sm",children:"Usage:"}),(0,t.jsx)(j.P,{code:"import { ConfigFactory, extract } from '@purescraps/purehtml';\n\nconst input = `<div>\n  <p>foo</p>\n  <p>bar</p>\n  <p>baz</p>\n</div>`;\nconst config = ConfigFactory.fromYAML('selector: p');\nconst result = extract(inputHtml, config, 'https://example.com');",lang:"typescript"})]})}function E(){return(0,t.jsxs)(i.Box,{id:"intro",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Introduction"}),(0,t.jsxs)(l.Text,{children:["PureHTML is a HTML parsing specification for extracting useful data from HTMLs in the JSON form. ",(0,t.jsx)("br",{}),"You may use Yaml to configure PureHTML parser, JSON support is also on the way."]})]})}function L(){return(0,t.jsxs)(i.Box,{id:"objects",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Objects"}),(0,t.jsxs)(l.Text,{children:["Extracting an array can be done by setting ",(0,t.jsx)("br",{}),(0,t.jsx)(a.Code,{children:"{ type: object, properties: { property: <configuration> } } "}),(0,t.jsx)("br",{}),"in our config. Example:"]}),(0,t.jsx)(x,{inputHtml:'<div>\n  <span class="firstname">John</span>\n  <span class="lastname">Doe</span>\n  <span class="age">42</span>\n</div>',configYaml:"type: object\nproperties:\n  firstName: { selector: .firstname }\n  lastName: { selector: .lastname }\n  age: { selector: .age }\n"}),(0,t.jsx)(o.Title,{mt:"md",order:5,children:"Appying transformers to the items:"}),(0,t.jsxs)(l.Text,{children:["Let's say, we want to extract attributes of the matched items. We can use ",(0,t.jsx)(a.Code,{children:"attr(...name: string[])"})," transformer."]}),(0,t.jsx)(x,{inputHtml:'<div id="course-details" data-course-id="9999">\n  introduction and table-of-contents of the course...\n  <h1>\n    Web Scraping Fundamentals\n  </h1>\n</div>',configYaml:"selector: '#course-details'\ntype: object\nproperties:\n  # if no other selector was provided, transformers will be executed\n  # on the parent element\n  courseId: { transform: [attr(data-course-id), number] }\n  title: { selector: h1, transform: [trim] }\n"}),(0,t.jsxs)(c.Alert,{icon:(0,t.jsx)(d.Z,{}),mt:"sm",children:["It's possible to omit ",(0,t.jsx)(a.Code,{children:"type: object"})," part if provide"," ",(0,t.jsx)(a.Code,{children:"properties"})]})]})}var S=r(13518);function N(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"attr"})," transformer"]}),(0,t.jsx)(l.Text,{children:"It can extract an individual attribute's value. It can also extract all or subset of the element's attributes with their values."}),(0,t.jsx)(l.Text,{children:"Examples:"}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"single",children:[(0,t.jsxs)(C.Accordion.Control,{h:(0,T.h)(35),children:["Extract a single attribute's value: ",(0,t.jsx)(a.Code,{children:"attr(data-name)"})]}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:'<div data-id="123"></div>',configYaml:"{ selector: div, transform: 'attr(data-id)' }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"all",children:[(0,t.jsxs)(C.Accordion.Control,{h:(0,T.h)(35),children:["Extract all attributes: ",(0,t.jsx)(a.Code,{children:"attr"})," or ",(0,t.jsx)(a.Code,{children:"attr()"})]}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:'<div data-id="123" data-full-name="John Doe"></div>',configYaml:"{ selector: div, transform: 'attr()' }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"subset",children:[(0,t.jsxs)(C.Accordion.Control,{h:(0,T.h)(35),children:["Extract subset of the attributes:"," ",(0,t.jsx)(a.Code,{children:"attr(data-id, data-name)"})]}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:'<div data-id="123" data-first-name="John" data-last-name="Doe"></div>',configYaml:"{ selector: div, transform: 'attr(data-first-name, data-last-name)' }"})})]})]})]})}function k(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"exists"})," transformer"]}),(0,t.jsx)(l.Text,{children:"Returns true if the given selector returned any elements."}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>Hello, world!</div>",configYaml:"{ selector: div, transform: exists }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"nonexisting",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example non-existing element"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>Hello, world!</div>",configYaml:"{ selector: span, transform: exists }"})})]})]})]})}let F="<div>\n  <p>Hello, world!</p>\n</div>";function M(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"html"})," transformer"]}),(0,t.jsxs)(l.Text,{children:["Returns ",(0,t.jsx)(a.Code,{children:"innerHTML"})," of the matched element."]}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:F,configYaml:"{ selector: div, transform: html }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"nonexisting",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example non-existing element"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:F,configYaml:"{ selector: span, transform: html }"})})]})]})]})}function W(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"length"})," transformer"]}),(0,t.jsxs)(l.Text,{children:["Returns the length of the ",(0,t.jsx)(a.Code,{children:"string"})," and ",(0,t.jsx)(a.Code,{children:"array"})," ","values."]}),(0,t.jsxs)(C.Accordion,{mt:"sm",multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"string",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Length of the string"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>Hello, world!</div>",configYaml:"{ selector: div, transform: length }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"array",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Length of the array"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div><span>hello</span> <span>foo</span> <span>bar baz</span></div>",configYaml:"{ selector: span, type: array, items: {}, transform: length }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"array-elems",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Lengths of the array elements"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div><span>hello</span> <span>foo</span> <span>bar baz</span></div>",configYaml:"{ selector: span, type: array, items: { transform: length } }"})})]})]})]})}function _(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"number"})," transformer"]}),(0,t.jsx)(l.Text,{children:"Casts the output to a number."}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"withoud number",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example without number"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>1234</div>",configYaml:"{ selector: div }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example with number"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>1234</div>",configYaml:"{ selector: div, transform: number }"})})]})]})]})}function q(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"resolve"})," transformer"]}),(0,t.jsxs)(l.Text,{children:["Resolves URLs by the given values with the URL given to",(0,t.jsx)(a.Code,{children:"extract()"})," call."]}),(0,t.jsx)(C.Accordion,{multiple:!0,children:(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:'<div>\n  <a href="/about">internal</a>\n  <a href="/articles/../help">internal - relative</a>\n  <a href="https://github.com/purescraps/purehtml">external</a>\n</div>',configYaml:"selector: a\ntype: array\nitems:\n  # we don't pass any selector here. we already got the <a> element here.\n  # we will first extract the \"href\" attribute, then resolve the value.\n  transform: ['attr(href)', resolve]\n"})})]})})]})}function z(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"trim"})," transformer"]}),(0,t.jsx)(l.Text,{children:"Trims all the subsequent whitespaces/newlines from start and end of the string."}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"withoud trim",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example without trim"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>     text    </div>",configYaml:"{ selector: div }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example with trim"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>     text    </div>",configYaml:"{ selector: div, transform: trim }"})})]})]})]})}function B(){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.Title,{mt:"md",order:5,children:[(0,t.jsx)(a.Code,{children:"urlQueryParam"})," transformer"]}),(0,t.jsxs)(l.Text,{children:["Similar to the ",(0,t.jsx)(a.Code,{children:"attr"})," transformer, but this transformer works on the URL query parameters."]}),(0,t.jsx)(l.Text,{children:"Examples:"}),(0,t.jsxs)(C.Accordion,{multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"single",children:[(0,t.jsx)(C.Accordion.Control,{h:{md:(0,T.h)(35),sm:(0,T.h)(50)},children:"Extract a single query parameter's value"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<span>https://example.com/search?q=sample+search+term&additional=to+be+ignored</span>",configYaml:"{ selector: span, transform: 'urlQueryParam(q)' }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"all",children:[(0,t.jsx)(C.Accordion.Control,{h:{md:(0,T.h)(35),sm:(0,T.h)(50)},children:"Extract all query parameters"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<span>https://example.com/search?q=sample+search+term&additional=to+be+ignored</span>",configYaml:"{ selector: span, transform: 'urlQueryParam()' }"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"subset",children:[(0,t.jsx)(C.Accordion.Control,{h:{md:(0,T.h)(35),sm:(0,T.h)(50)},children:"Extract subset of the query parameters"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<span>https://example.com/search?q=sample+search+term&utm_source=hackernews&additional=to+be+ignored</span>",configYaml:"{ selector: span, transform: 'urlQueryParam(q, utm_source)' }"})})]})]})]})}function U(){return(0,t.jsxs)(i.Box,{id:"transformers",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Transformers"}),(0,t.jsxs)(p.Anchor,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors",rel:"nofollow",target:"_blank",children:["Selectors ",(0,t.jsx)(S.Z,{size:16})]}),"give us ",(0,t.jsx)(a.Code,{children:"string"})," values of the"," ",(0,t.jsx)(p.Anchor,{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText",rel:"nofollow",target:"_blank",children:(0,t.jsx)(a.Code,{children:"innerText"})})," ","of the given HTMLElement. You may want to ",(0,t.jsx)(a.Code,{children:"trim"})," the result, cast output to ",(0,t.jsx)(a.Code,{children:"number"}),". Or you may also need to extract an"," ",(0,t.jsx)(a.Code,{children:"attribute"})," of the matched element. These cases and more can be handled by the use of transformers.",(0,t.jsx)(N,{}),(0,t.jsx)(k,{}),(0,t.jsx)(M,{}),(0,t.jsx)(W,{}),(0,t.jsx)(_,{}),(0,t.jsx)(q,{}),(0,t.jsx)(z,{}),(0,t.jsx)(B,{})]})}function O(){return(0,t.jsxs)(i.Box,{id:"union-config",mt:"md",children:[(0,t.jsx)(o.Title,{order:3,children:"Union config"}),(0,t.jsxs)(l.Text,{children:["This configuration accepts multiple configurations and returns the first matched config's result. You may pass a ",(0,t.jsx)(a.Code,{children:"constant config"})," as the last element so it will be used as ",(0,t.jsx)(a.Code,{children:"default"})," value."]}),(0,t.jsxs)(C.Accordion,{mt:"sm",multiple:!0,children:[(0,t.jsxs)(C.Accordion.Item,{value:"example",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Example"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>\n    <p>paragraph element</p>\n</div>",configYaml:"union:\n  - selector: a # will not match\n  - selector: span # will not match\n  - selector: p # will match\n"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"default value",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"Default value if nothing matches"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>\n    <p>paragraph element</p>\n</div>",configYaml:"union:\n  - selector: a # will not match\n  - selector: span # will not match\n  - constant: default value # will match\n"})})]}),(0,t.jsxs)(C.Accordion.Item,{value:"no matches",children:[(0,t.jsx)(C.Accordion.Control,{h:(0,T.h)(35),children:"No matches"}),(0,t.jsx)(C.Accordion.Panel,{children:(0,t.jsx)(x,{inputHtml:"<div>\n    <p>paragraph element</p>\n</div>",configYaml:"union:\n  - selector: a # will not match\n  - selector: span # will not match\n"})})]})]})]})}var J=r(29036);function R(){return(0,t.jsx)(J.AppLayout,{children:(0,t.jsx)(s.Grid,{children:(0,t.jsxs)(s.Grid.Col,{span:{md:8,sm:12},children:[(0,t.jsx)(E,{}),(0,t.jsx)(I,{}),(0,t.jsx)(y,{}),(0,t.jsx)(w,{}),(0,t.jsx)(u,{}),(0,t.jsx)(L,{}),(0,t.jsx)(U,{}),(0,t.jsx)(O,{})]})})})}},82842:function(e,n,r){"use strict";r.d(n,{v:function(){return i}});var t=r(71493),s=r(67058);function i(e){let{inputHtml:n,configYaml:r}=e,[i,o]=(0,s.useState)({configIsValid:!0,result:""}),[l,a]=(0,s.useState)(null);return(0,s.useEffect)(()=>{if(!r){o(e=>({...e,configIsValid:!0}));return}try{a(t.ConfigFactory.fromYAML(r)),o(e=>({...e,configIsValid:!0}))}catch(e){o(e=>({...e,configIsValid:!1}))}},[r]),(0,s.useEffect)(()=>{if(!l||!n){o(e=>({...e,result:""}));return}try{let e=JSON.stringify((0,t.extract)(n,l,"https://example.com"),null,"  ");o(n=>({...n,result:e}))}catch(e){o(e=>({...e,result:""}))}},[l,n]),i}}},function(e){e.O(0,[774,499,633,424,913,158,660,744],function(){return e(e.s=38705)}),_N_E=e.O()}]);